/* reset for different browsers*/
* {
  padding: 0;
  margin: 0;
  box-sizing: border-box;
}

body {
  background: steelblue;
  color: white;
}

a {
  color: #00B7FF;
}

.main {
  padding: 8px;
  max-width: 1024px;
  margin: 0 auto;
}

/* The color contrast against a blue background is too low, for visual disabilities */
:focus {
  outline: 2px solid orange;
}

.button {
  background: none;
  color: white;
  border: none;
}

button:hover {
  cursor: pointer;
}

/* BEM style css architectures */
.body--themed {
  color: gold;
}

/* add this class on element (.body--themed) with this selector ([data-theme="button"]), setting it to gold */
.body--themed [data-theme="button"] {
  color: gold;
}

.navbar {
  max-width: 400px;
  margin: 0 auto;
}

.navbar-list {
  display: flex;
  justify-content: space-between;
}

/* Using translate for rendering performance */
.sidebar {
  height: 100vh;
  position: fixed;
  top: 0;
  left: 0;
  /* width: 200px; */
  width: 100%;
  /* background: rgba(111, 111, 111, 1); */
  /* transform: translate3d(-200px, 0, 0); */
  transform: translate3d(-100%, 0, 0);
  transition: transform 0.4s;
  display: flex;
}

.sidebar--open {
  transform: translate3d(0, 0, 0);
}

.sidebar__ul,
.sidebar__click-catcher {
  flex: 1 1 auto;
}

.sidebar__ul {
  background: rgba(111, 111, 111, 1);
  padding: 8px;
}

/* Media queries */
@media screen and (min-width: 769px) {
  .sidebar__ul {
    flex: 0 0 200px;
  }
}

/* .themed {
  color: gold;
} */

/* 
  What about css grid?

  A grid layout could be used for this layout, but it would be overkill.
  Skill is know what/when to use what.

  Pick the right tool for the job, always.
*/